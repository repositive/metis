/// <reference types="ramda" />
import _IrisAMQP from './amqp';
import { LibOpts as IrisAMQPLibOpts } from './amqp';
export declare const IrisAMQP: typeof _IrisAMQP;
export declare const toPromise: R.CurriedFunction2<{}, {}, Promise<{}>>;
export default function (opts: (IrisAMQPLibOpts & {
    _IrisAMQP?: typeof IrisAMQP;
})): Promise<{
    request: <T, R>(o: {
        pattern: string;
        payload?: T | undefined;
    }) => Promise<void | R>;
    register: <T, R>(o: {
        pattern: string;
        handler: (opts: {
            payload: T;
        }) => Promise<R>;
    }) => Promise<void>;
}>;
