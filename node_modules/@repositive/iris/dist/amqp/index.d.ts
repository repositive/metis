/// <reference types="node" />
import { connect } from 'amqplib';
import { RegisterOpts, setupRegister } from './register';
import { RequestOpts, setupRequest } from './request';
export interface LibOpts {
    uri?: string;
    exchange?: string;
    registrations?: {
        [k: string]: RegisterOpts;
    };
    namespace?: string;
    _setupRequest?: typeof setupRequest;
    _setupRegister?: typeof setupRegister;
    _connect?: typeof connect;
    _restartConnection?: typeof restartConnection;
    _log?: typeof console;
}
export declare function restartConnection({opts, timeout, attempt, _setup, _setTimeout}: {
    opts: LibOpts;
    timeout?: number;
    attempt?: number;
    _setup?: typeof setup;
    _setTimeout?: typeof setTimeout;
}): Promise<{}>;
export default function setup(opts?: LibOpts): Promise<{
    register(ropts: RegisterOpts): Promise<void>;
    request(ropts: RequestOpts): Promise<void | Buffer>;
}>;
