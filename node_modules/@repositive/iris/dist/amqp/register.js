"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const bluebird_1 = require("bluebird");
function setupRegister({ exchange, ch, namespace = 'default' }) {
    return __awaiter(this, arguments, void 0, function* () {
        yield ch.assertExchange(exchange, 'topic', { durable: true });
        const _namespace = arguments[0].namespace;
        return function subscribe({ pattern, handler }) {
            return __awaiter(this, arguments, void 0, function* () {
                const __namespace = arguments[0].namespace || namespace;
                const queueName = `${__namespace}-${pattern}`;
                return yield bluebird_1.all([
                    ch.assertQueue(queueName),
                    ch.prefetch(1),
                    ch.bindQueue(queueName, exchange, pattern),
                    ch.consume(queueName, (msg) => {
                        function onError(err) {
                            return ch.sendToQueue(msg.properties.replyTo, Buffer.from(JSON.stringify({ error: (err && err.message) || 'Unexpected error' })), { correlationId: msg.properties.correlationId, headers: { code: 1 } });
                        }
                        try {
                            return handler({ payload: msg.content })
                                .then((response) => {
                                if (msg.properties && msg.properties.replyTo && msg.properties.correlationId) {
                                    return ch.sendToQueue(msg.properties.replyTo, response || Buffer.alloc(0), { correlationId: msg.properties.correlationId, headers: { code: 0 } });
                                }
                            })
                                .catch(onError)
                                .then(() => {
                                ch.ack(msg);
                            });
                        }
                        catch (err) {
                            onError(err);
                            ch.ack(msg);
                        }
                    }, { noAck: false })
                ]).then(_ => undefined);
            });
        };
    });
}
exports.setupRegister = setupRegister;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYW1xcC9yZWdpc3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0EsdUNBQTZCO0FBa0I3Qix1QkFBb0MsRUFDbEMsUUFBUSxFQUNSLEVBQUUsRUFDRixTQUFTLEdBQUcsU0FBUyxFQUNIOztRQUNsQixNQUFNLEVBQUUsQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxFQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO1FBRTVELE1BQU0sVUFBVSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDMUMsTUFBTSxDQUFDLG1CQUF5QixFQUM5QixPQUFPLEVBQ1AsT0FBTyxFQUNNOztnQkFDYixNQUFNLFdBQVcsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxJQUFJLFNBQVMsQ0FBQztnQkFDeEQsTUFBTSxTQUFTLEdBQUcsR0FBRyxXQUFXLElBQUksT0FBTyxFQUFFLENBQUM7Z0JBQzlDLE1BQU0sQ0FBQyxNQUFNLGNBQUcsQ0FBQztvQkFDZixFQUFFLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQztvQkFDekIsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7b0JBQ2QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQztvQkFDMUMsRUFBRSxDQUFDLE9BQU8sQ0FDUixTQUFTLEVBQ1QsQ0FBQyxHQUFZO3dCQUNYLGlCQUFpQixHQUFXOzRCQUMxQixNQUFNLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FDbkIsR0FBRyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQ3RCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFDLEtBQUssRUFBRSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksa0JBQWtCLEVBQUMsQ0FBQyxDQUFDLEVBQ2hGLEVBQUMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUMsRUFBQyxDQUNsRSxDQUFDO3dCQUNKLENBQUM7d0JBQ0QsSUFBSSxDQUFDOzRCQUNILE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBQyxDQUFDO2lDQUNuQyxJQUFJLENBQUMsQ0FBQyxRQUFpQjtnQ0FDdEIsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQVUsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLE9BQU8sSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7b0NBQzdFLE1BQU0sQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUNuQixHQUFHLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFDdEIsUUFBUSxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQzNCLEVBQUMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLE9BQU8sRUFBRSxFQUFDLElBQUksRUFBRSxDQUFDLEVBQUMsRUFBQyxDQUNsRSxDQUFDO2dDQUNKLENBQUM7NEJBQ0gsQ0FBQyxDQUFDO2lDQUNELEtBQUssQ0FBQyxPQUFPLENBQUM7aUNBQ2QsSUFBSSxDQUFDO2dDQUNKLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7NEJBQ2QsQ0FBQyxDQUFDLENBQUM7d0JBQ1AsQ0FBQzt3QkFBQyxLQUFLLENBQUEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDOzRCQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQzs0QkFDYixFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO3dCQUNkLENBQUM7b0JBQ0gsQ0FBQyxFQUNELEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBQyxDQUNmO2lCQUNGLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxDQUFDO1lBQzFCLENBQUM7U0FBQSxDQUFDO0lBQ0osQ0FBQztDQUFBO0FBcERELHNDQW9EQyJ9