"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
const readLine = require('readline');
const rl = readLine.createInterface({
    input: process.stdin,
    output: process.stdout
});
function question({ query, _rl = rl }) {
    return new Promise((resolve, reject) => {
        _rl.question(query, (answer) => {
            resolve(answer);
        });
    });
}
function chatListener({ payload }) {
    return __awaiter(this, void 0, void 0, function* () {
        console.log(`\n${payload.author}: ${payload.comment}`);
        return { ack: true };
    });
}
function prepareNameListener(username) {
    return function nameListener({ payload }) {
        return __awaiter(this, void 0, void 0, function* () {
            return {
                name: username
            };
        });
    };
}
const cmds = {
    'cntg': ({ oldParams, _question = question }) => __awaiter(this, void 0, void 0, function* () {
        const target = yield _question({ query: 'New target: ' });
        return Object.assign({}, oldParams, { target });
    })
};
function chat({ request, username, target, _question = question, _cmds = cmds }) {
    return __awaiter(this, void 0, void 0, function* () {
        while (true) {
            const answer = yield _question({ query: `${username}: ` });
            if (/:[a-z]/.test(answer)) {
                const cmd = answer.substring(1);
                return chat(yield _cmds[cmd]({ oldParams: { request, username, target, _question } }));
            }
            else {
                yield request({ pattern: `chat.${target}`, payload: { comment: `${answer}`, author: username } }).catch(console.warn);
            }
        }
    });
}
function init({ /* Default argument definition */ _question = question, _irisSetup = __1.default }) {
    return __awaiter(this, void 0, void 0, function* () {
        const { request, register } = yield _irisSetup({ namespace: 'chat' });
        const username = yield _question({ query: 'Your username: ' });
        register({ pattern: `chat.${username}`, handler: chatListener });
        register({ pattern: `chat.name.${username}`, handler: prepareNameListener(username) });
        const target = yield _question({ query: 'Insert user: ' });
        return chat({ request, username, target });
    });
}
init({}).catch(console.error);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdC5leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2V4YW1wbGVzL2NoYXQuZXhhbXBsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsMEJBQTJCO0FBRTNCLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUVyQyxNQUFNLEVBQUUsR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFDO0lBQ2xDLEtBQUssRUFBRSxPQUFPLENBQUMsS0FBSztJQUNwQixNQUFNLEVBQUUsT0FBTyxDQUFDLE1BQU07Q0FDdkIsQ0FBQyxDQUFDO0FBRUgsa0JBQWtCLEVBQ2hCLEtBQUssRUFDTCxHQUFHLEdBQUcsRUFBRSxFQUlUO0lBQ0MsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU07UUFDakMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxNQUFjO1lBQ2pDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsQixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQU9ELHNCQUE0QixFQUFDLE9BQU8sRUFBaUI7O1FBQ25ELE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxPQUFPLENBQUMsTUFBTSxLQUFLLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZELE1BQU0sQ0FBQyxFQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUMsQ0FBQztJQUNyQixDQUFDO0NBQUE7QUFFRCw2QkFBNkIsUUFBZ0I7SUFDM0MsTUFBTSxDQUFDLHNCQUE0QixFQUFDLE9BQU8sRUFBaUI7O1lBQzFELE1BQU0sQ0FBQztnQkFDTCxJQUFJLEVBQUUsUUFBUTthQUNmLENBQUM7UUFDSixDQUFDO0tBQUEsQ0FBQztBQUNKLENBQUM7QUFVRCxNQUFNLElBQUksR0FBeUc7SUFDakgsTUFBTSxFQUFFLENBQU8sRUFBQyxTQUFTLEVBQUUsU0FBUyxHQUFHLFFBQVEsRUFBQztRQUM5QyxNQUFNLE1BQU0sR0FBRyxNQUFNLFNBQVMsQ0FBQyxFQUFDLEtBQUssRUFBRSxjQUFjLEVBQUMsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sbUJBQUssU0FBUyxJQUFFLE1BQU0sSUFBRTtJQUNoQyxDQUFDLENBQUE7Q0FDRixDQUFDO0FBRUYsY0FBb0IsRUFDbEIsT0FBTyxFQUNQLFFBQVEsRUFDUixNQUFNLEVBQ04sU0FBUyxHQUFHLFFBQVEsRUFDcEIsS0FBSyxHQUFHLElBQUksRUFDRDs7UUFHWCxPQUFPLElBQUksRUFBRSxDQUFDO1lBQ1osTUFBTSxNQUFNLEdBQUcsTUFBTSxTQUFTLENBQUMsRUFBQyxLQUFLLEVBQUUsR0FBRyxRQUFRLElBQUksRUFBQyxDQUFDLENBQUM7WUFDekQsRUFBRSxDQUFBLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pCLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBQyxTQUFTLEVBQUUsRUFBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztZQUNyRixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sTUFBTSxPQUFPLENBQUMsRUFBQyxPQUFPLEVBQUUsUUFBUSxNQUFNLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxPQUFPLEVBQUUsR0FBRyxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFDLEVBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDckgsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0NBQUE7QUFFRCxjQUNBLEVBQUUsaUNBQWlDLENBQ2pDLFNBQVMsR0FBRyxRQUFRLEVBQ3BCLFVBQVUsR0FBRyxXQUFTLEVBSXZCOztRQUNDLE1BQU0sRUFBQyxPQUFPLEVBQUUsUUFBUSxFQUFDLEdBQUcsTUFBTSxVQUFVLENBQUMsRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFDLENBQUMsQ0FBQztRQUVsRSxNQUFNLFFBQVEsR0FBRyxNQUFNLFNBQVMsQ0FBQyxFQUFDLEtBQUssRUFBRSxpQkFBaUIsRUFBQyxDQUFDLENBQUM7UUFFN0QsUUFBUSxDQUFDLEVBQUMsT0FBTyxFQUFFLFFBQVEsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBQyxDQUFDLENBQUM7UUFDL0QsUUFBUSxDQUFDLEVBQUMsT0FBTyxFQUFFLGFBQWEsUUFBUSxFQUFFLEVBQUUsT0FBTyxFQUFFLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyxFQUFDLENBQUMsQ0FBQztRQUVyRixNQUFNLE1BQU0sR0FBRyxNQUFNLFNBQVMsQ0FBQyxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQUMsQ0FBQyxDQUFDO1FBRTFELE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBQyxDQUFDLENBQUM7SUFFM0MsQ0FBQztDQUFBO0FBRUQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMifQ==